{"version":3,"sources":["../js/app.js"],"names":["App","web3Provider","contracts","account","tokenPrice","tokensSold","tokensAvailable","init","console","log","initWeb3","web3","currentProvider","Web3","providers","HttpProvider","isConnected","initContracts","$","getJSON","ERC20Sale","TruffleContract","setProvider","deployed","then","address","done","IOTPool","ERC20","listenForEvents","render","instance","Sell","fromBlock","toBlock","watch","error","event","eth","getCoinbase","err","val","ERC20SaleInstance","toNumber","html","ERC20Instance","balanceOf","balance","buyTokens","numberOfTokens","from","value","gas","result","initiate_session","window","on"],"mappings":"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","file":"app.5a203f7e.js","sourceRoot":"..","sourcesContent":["App = {\r\n    web3Provider: null,\r\n    contracts: {},\r\n    account: '0x95f7f07c365B69eE0B4071C04066f009890c3c68',\r\n    tokenPrice: 1000000000000000,\r\n    tokensSold: 0,\r\n    tokensAvailable: 750000,\r\n  \r\n    init: function() {\r\n      console.log(\"App initialized...\")\r\n      return App.initWeb3();\r\n    },\r\n  \r\n    initWeb3: function() {\r\n      if (typeof web3 !== 'undefined') {\r\n        // If a web3 instance is already provided by Meta Mask.\r\n        App.web3Provider = web3.currentProvider;\r\n        web3 = new Web3(web3.currentProvider);\r\n      } else {\r\n        // Specify default instance if no web3 instance provided\r\n        App.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');\r\n        web3 = new Web3(App.web3Provider);\r\n      }\r\n      if(web3.isConnected()){\r\n        console.log('web3 connected');\r\n      }\r\n      return App.initContracts();\r\n    },\r\n  \r\n    initContracts: function() {\r\n      $.getJSON(\"ERC20Sale.json\", function(ERC20Sale) {\r\n        App.contracts.ERC20Sale = TruffleContract(ERC20Sale);\r\n        App.contracts.ERC20Sale.setProvider(App.web3Provider);\r\n        App.contracts.ERC20Sale.deployed().then(function(ERC20Sale) {\r\n          console.log(\"ERC20 Sale Address:\", ERC20Sale.address);\r\n        });\r\n      }).done(function(){\r\n        $.getJSON(\"IOTPool.json\", function(IOTPool) {\r\n            App.contracts.IOTPool = TruffleContract(IOTPool);\r\n            App.contracts.IOTPool.setProvider(App.web3Provider);\r\n            App.contracts.IOTPool.deployed().then(function(IOTPool) {\r\n              console.log(\"IOTPool Address:\", IOTPool.address);\r\n            });\r\n      })\r\n    }).done(function() {\r\n        $.getJSON(\"ERC20.json\", function(ERC20) {\r\n          App.contracts.ERC20 = TruffleContract(ERC20);\r\n          App.contracts.ERC20.setProvider(App.web3Provider);\r\n          App.contracts.ERC20.deployed().then(function(ERC20) {\r\n            console.log(\"ERC20 Address:\", ERC20.address);\r\n          });\r\n  \r\n          App.listenForEvents();\r\n          return App.render();\r\n        });\r\n      })\r\n    },\r\n  \r\n    // Listen for events emitted from the contract\r\n    listenForEvents: function() {\r\n      App.contracts.ERC20Sale.deployed().then(function(instance) {\r\n        instance.Sell({}, {\r\n          fromBlock: 0,\r\n          toBlock: 'latest',\r\n        }).watch(function(error, event) {\r\n          console.log(\"event triggered\", event);\r\n          App.render();\r\n        })\r\n      })\r\n    },\r\n  \r\n    render: function() {\r\n        \r\n      // Load account data\r\n      console.log(\"Your Account: \" + App.account);\r\n      web3.eth.getCoinbase(function(err, account) {\r\n        if(err === null) {\r\n          App.account = account;\r\n          $('#exampleInputEmail1').val(\"\" + account);\r\n          console.log(\"Your Account: \" + account);\r\n        }\r\n        else{\r\n          console.log(err);\r\n        }\r\n      })\r\n  \r\n      // Load token sale contract\r\n      App.contracts.ERC20Sale.deployed().then(function(instance) {\r\n        ERC20SaleInstance = instance;\r\n        return ERC20SaleInstance.tokenPrice();\r\n      }).then(function(tokenPrice) {\r\n        App.tokenPrice = tokenPrice;\r\n        //$('.token-price').html(web3.utils.fromWei(App.tokenPrice, \"ether\").toNumber());\r\n        return ERC20SaleInstance.tokensSold();\r\n      }).then(function(tokensSold) {\r\n        App.tokensSold = tokensSold.toNumber();\r\n        $('.tokens-sold').html(App.tokensSold);\r\n        $('.tokens-available').html(App.tokensAvailable);\r\n  \r\n        //Load token contract\r\n        App.contracts.ERC20.deployed().then(function(instance) {\r\n            ERC20Instance = instance;\r\n          return ERC20Instance.balanceOf(App.account);\r\n        }).then(function(balance) {\r\n          $('.ERC20-balance').html(balance.toNumber());\r\n        })\r\n       });\r\n    },\r\n  \r\n    buyTokens: function() {\r\n      var numberOfTokens = $('quantity').val();\r\n      App.contracts.ERC20Sale.deployed().then(function(instance) {\r\n        return instance.buyTokens(numberOfTokens, {\r\n          from: App.account,\r\n          value: numberOfTokens * App.tokenPrice,\r\n          gas: 500000 // Gas limit\r\n        });\r\n      }).then(function(result) {\r\n        console.log(\"Tokens bought...\")\r\n        //$('form').trigger('reset') // reset number of tokens in form\r\n        // Wait for Sell event\r\n      });\r\n    },\r\n\r\n    initiate_session: function(){\r\n        App.contracts.IOTPool.deployed().then(function(instance) {\r\n            return instance.initiate_session( {\r\n              from: App.account,\r\n              gas: 500000 // Gas limit\r\n            });\r\n          }).then(function(result) {\r\n            console.log(\"session initiated...\")\r\n          });\r\n    }\r\n\r\n  }\r\n  \r\n  $(function() {\r\n    $(window).on('load',function() {\r\n      App.init();\r\n    })\r\n  });"]}